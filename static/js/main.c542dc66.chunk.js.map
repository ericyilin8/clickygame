{"version":3,"sources":["components/Card/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["Card","clickedOn","_this","props","clicked","reset","updateClicked","index","shuffle","incScore","_this2","this","react_default","a","createElement","className","onClick","src","image","React","Component","Wrapper","children","Title","originalCardArr","cardArr","forEach","card","push","App","state","score","topScore","tempArr","length","randomIndex","Math","floor","random","tempCard","splice","setState","prevState","console","log","components_Wrapper","components_Title","style","width","map","components_Card","key","ReactDOM","render","src_App","document","getElementById"],"mappings":"ykFA+BeA,oNAzBbC,UAAY,WAENC,EAAKC,MAAMC,QACbF,EAAKC,MAAME,SAEXH,EAAKC,MAAMG,cAAcJ,EAAKC,MAAMI,OACpCL,EAAKC,MAAMK,UACXN,EAAKC,MAAMM,qFAON,IAAAC,EAAAC,KACP,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKE,QAAS,kBAAIN,EAAKT,aAAagB,IAAKN,KAAKR,MAAMe,iBArB3CC,IAAMC,kBCIVC,MAJf,SAAiBlB,GACf,OAAOS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWZ,EAAMmB,iBCG1BC,MAJf,SAAepB,GACb,OAAOS,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASZ,EAAMmB,kBCIlCE,EAAkB,GAGtBC,EAAQC,QAAQ,SAAUC,GAExBA,EAAKvB,SAAU,EAEfoB,EAAgBI,KAAKD,SAsHRE,6MA7GbC,MAAQ,CACNL,UACAM,MAAO,EACPC,SAAU,KAGZxB,QAAU,WAQR,IANA,IAAIiB,EAAUvB,EAAK4B,MAAML,QAIrBQ,EAAU,GAEPR,EAAQS,OAAS,GAAG,CAEzB,IAAIC,EAAcC,KAAKC,MAAMD,KAAKE,SAAWb,EAAQS,QAEjDK,EAAWd,EAAQe,OAAOL,EAAa,GAE3CF,EAAQL,KAAKW,EAAS,IAIxBN,EAAQP,QAAQ,SAAUC,GAExBF,EAAQG,KAAKD,QASjBlB,SAAW,WAETP,EAAKuC,SAAS,SAACC,GAAD,MAAgB,CAAEX,MAAO7B,EAAK4B,MAAMC,MAAQ,KAE1DY,QAAQC,IAAIpB,MAKdnB,MAAQ,WAGFH,EAAK4B,MAAMC,MAAQ7B,EAAK4B,MAAME,UAEhC9B,EAAKuC,SAAS,SAACC,GAAD,MAAc,CAACV,SAAU9B,EAAK4B,MAAMC,SAKpD7B,EAAKuC,SAAS,SAAAC,GAAS,MAAG,CAACX,MAAM,KAEjCN,EAAQe,OAAO,EAAGf,EAAQS,QAE1BV,EAAgBE,QAAQ,SAASC,GAE/BA,EAAKvB,SAAU,EAEfqB,EAAQG,KAAKD,KAIfzB,EAAKuC,SAAS,SAACC,GAAD,MAAc,CAACjB,QAASA,QAMxCnB,cAAgB,SAACC,GAGf,IAAIkB,EAAUvB,EAAK4B,MAAML,QAIzBA,EAAQlB,GAAOH,SAAU,EAEzBF,EAAKuC,SAAS,SAACC,GAAD,MAAc,CAACjB,QAASA,8EAK/B,IAAAf,EAAAC,KACP,OACEC,EAAAC,EAAAC,cAAC+B,EAAD,KACEjC,EAAAC,EAAAC,cAACgC,EAAD,qGACAlC,EAAAC,EAAAC,cAAA,OAAKiC,MAAO,CAAEC,MAAO,SAArB,SAAsCrC,KAAKmB,MAAMC,MAAMnB,EAAAC,EAAAC,cAAA,WAAvD,cAA4EH,KAAKmB,MAAME,UAEtFrB,KAAKmB,MAAML,QAAQwB,IAAI,SAACtB,EAAMpB,GAAP,OACtBK,EAAAC,EAAAC,cAACoC,EAAD,CACEC,IAAK5C,EACLA,MAAOA,EACPC,QAASE,EAAKF,QACdC,SAAUC,EAAKD,SACfJ,MAAOK,EAAKL,MACZa,MAAOS,EAAKT,MACZd,QAASuB,EAAKvB,QACdE,cAAeI,EAAKJ,0BA1Gdc,mBCdlBgC,IAASC,OAAOzC,EAAAC,EAAAC,cAACwC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.c542dc66.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nclass Card extends React.Component {\r\n\r\n\r\n  clickedOn = () => {\r\n\r\n    if (this.props.clicked) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.updateClicked(this.props.index);\r\n      this.props.shuffle();\r\n      this.props.incScore();\r\n      //console.log(this.props);\r\n      \r\n    }\r\n\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"img-container\">\r\n          <img onClick={()=>this.clickedOn()} src={this.props.image} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper(props) {\r\n  return <div className=\"wrapper\">{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Title(props) {\r\n  return <h1 className=\"title\">{props.children}</h1>;\r\n}\r\n\r\nexport default Title;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"./components/Card\";\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport Title from \"./components/Title\";\r\nimport cardArr from \"./cardArr.json\";\r\n\r\n\r\n\r\nvar originalCardArr = [];\r\n\r\n\r\ncardArr.forEach(function (card) {\r\n\r\n  card.clicked = false;\r\n\r\n  originalCardArr.push(card);\r\n\r\n});\r\n\r\nclass App extends Component {\r\n\r\n  //add a clicked property to each card in the cardArr\r\n\r\n\r\n  state = {\r\n    cardArr,\r\n    score: 0,\r\n    topScore: 0\r\n  };\r\n\r\n  shuffle = () => {\r\n\r\n    var cardArr = this.state.cardArr;\r\n\r\n    //console.log('cardarr', cardArr);\r\n\r\n    var tempArr = [];\r\n\r\n    while (cardArr.length > 0) {\r\n\r\n      var randomIndex = Math.floor(Math.random() * cardArr.length);\r\n\r\n      var tempCard = cardArr.splice(randomIndex, 1);\r\n\r\n      tempArr.push(tempCard[0]);\r\n\r\n    }\r\n\r\n    tempArr.forEach(function (card) {\r\n\r\n      cardArr.push(card);\r\n\r\n\r\n    });\r\n\r\n    //this.setState({cardArr: cardArr});\r\n\r\n  };\r\n\r\n  incScore = () => {\r\n\r\n    this.setState((prevState) => ({ score: this.state.score + 1 }));\r\n\r\n    console.log(originalCardArr);\r\n\r\n\r\n  };\r\n\r\n  reset = () => {\r\n\r\n    //console.log('cardarrBefore', cardArr);\r\n    if (this.state.score > this.state.topScore) {\r\n\r\n      this.setState((prevState)=>({topScore: this.state.score }));\r\n\r\n    }\r\n    //this.setState((prevState)=>({cardArr: originalCardArr, score: 0}));\r\n    \r\n    this.setState(prevState=>({score:0}));\r\n\r\n    cardArr.splice(0, cardArr.length);\r\n\r\n    originalCardArr.forEach(function(card){\r\n\r\n      card.clicked = false;\r\n\r\n      cardArr.push(card);\r\n\r\n    });\r\n\r\n    this.setState((prevState)=>({cardArr: cardArr}));\r\n    //console.log('cardarr', cardArr);\r\n    //console.log('original', originalCardArr);\r\n\r\n  }\r\n\r\n  updateClicked = (index) => {\r\n\r\n\r\n    var cardArr = this.state.cardArr;\r\n    // console.log('cardarr1', cardArr[0], cardArr[index], cardArr);\r\n    // console.log('index', index);\r\n\r\n    cardArr[index].clicked = true;\r\n    //console.log(cardArr[index]);\r\n    this.setState((prevState)=>({cardArr: cardArr}));\r\n\r\n  };\r\n\r\n  // Map over this.state.friends and render a FriendCard component for each friend object\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <Title>Clicky Game: Earn a point for clicking a picture once. Click a picture twice and start over!</Title>\r\n        <div style={{ width: '100%' }}>Score:{this.state.score}<br></br>High Score:{this.state.topScore}</div>\r\n\r\n        {this.state.cardArr.map((card, index) => (\r\n          <Card\r\n            key={index}\r\n            index={index}\r\n            shuffle={this.shuffle}\r\n            incScore={this.incScore}\r\n            reset={this.reset}\r\n            image={card.image}\r\n            clicked={card.clicked}\r\n            updateClicked={this.updateClicked}\r\n          />\r\n        ))}\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}